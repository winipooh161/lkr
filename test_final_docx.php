<?php

require_once 'vendor/autoload.php';

use PhpOffice\PhpWord\PhpWord;
use PhpOffice\PhpWord\IOFactory;
use PhpOffice\PhpWord\Shared\Html;

echo "–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —É–ª—É—á—à–µ–Ω–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏ sanitizeHtmlForPhpWord...\n\n";

// –¢–µ—Å—Ç–æ–≤—ã–π HTML –∫–∞–∫ –≤ ActFlIpController
$realHtml = '<!DOCTYPE html>
<html>
<head>
    <meta charset="UTF-8">
    <title>–ê–∫—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã—Ö —Ä–∞–±–æ—Ç –§–õ-–ò–ü</title>
    <style>
        body {
            font-family: "DejaVu Sans", "Arial", sans-serif;
            line-height: 1.4;
            font-size: 12pt;
        }
        .header {
            text-align: center;
            font-weight: bold;
            margin-bottom: 20px;
            font-size: 14pt;
        }
        table.border {
            border-collapse: collapse;
            width: 100%;
            margin: 15px 0;
        }
        table.border th, table.border td {
            border: 1px solid black;
            padding: 5px;
        }
    </style>
</head>
<body>
    <div class="header">–ê–ö–¢ –í–´–ü–û–õ–ù–ï–ù–ù–´–• –†–ê–ë–û–¢ ‚Ññ 123</div>
    <p>–≥. –ú–æ—Å–∫–≤–∞                                                         01.01.2024</p>
    
    <p>–ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–π –ø—Ä–µ–¥–ø—Ä–∏–Ω–∏–º–∞—Ç–µ–ª—å –ò–ü –ò–≤–∞–Ω–æ–≤, –ò–ù–ù 123456789012, –û–ì–†–ù–ò–ü 123456789012345, –∞–¥—Ä–µ—Å: –ú–æ—Å–∫–≤–∞, —É–ª. –¢–µ—Å—Ç–æ–≤–∞—è, –¥. 1, –≤ –¥–∞–ª—å–Ω–µ–π—à–µ–º ¬´–ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å¬ª, —Å –æ–¥–Ω–æ–π —Å—Ç–æ—Ä–æ–Ω—ã, –∏</p>
    
    <p>–ü–µ—Ç—Ä–æ–≤ –ü–µ—Ç—Ä –ü–µ—Ç—Ä–æ–≤–∏—á, –ø–∞—Å–ø–æ—Ä—Ç: —Å–µ—Ä–∏—è 1234 ‚Ññ 567890, –≤—ã–¥–∞–Ω –û–í–î –¢–µ—Å—Ç–æ–≤–æ–µ 01.01.2010, –∫–æ–¥ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è 123-456, –≤ –¥–∞–ª—å–Ω–µ–π—à–µ–º ¬´–ó–∞–∫–∞–∑—á–∏–∫¬ª, —Å –¥—Ä—É–≥–æ–π —Å—Ç–æ—Ä–æ–Ω—ã, —Å–æ—Å—Ç–∞–≤–∏–ª–∏ –Ω–∞—Å—Ç–æ—è—â–∏–π –ê–∫—Ç –æ —Ç–æ–º, —á—Ç–æ –ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å –≤—ã–ø–æ–ª–Ω–∏–ª —Å–ª–µ–¥—É—é—â–∏–µ —Ä–∞–±–æ—Ç—ã:</p>
    
    <table class="border">
        <tr>
            <th>‚Ññ</th>
            <th>–ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ —Ä–∞–±–æ—Ç</th>
            <th>–ï–¥. –∏–∑–º.</th>
            <th>–ö–æ–ª-–≤–æ</th>
            <th>–¶–µ–Ω–∞</th>
            <th>–°—É–º–º–∞</th>
        </tr>
        <tr>
            <td>1</td>
            <td>–ö–æ–º–ø–ª–µ–∫—Å —Ä–µ–º–æ–Ω—Ç–Ω–æ-–æ—Ç–¥–µ–ª–æ—á–Ω—ã—Ö —Ä–∞–±–æ—Ç –ø–æ –∞–¥—Ä–µ—Å—É: –ú–æ—Å–∫–≤–∞, —É–ª. –¢–µ—Å—Ç–æ–≤–∞—è, –¥. 1</td>
            <td>—É—Å–ª.</td>
            <td>1</td>
            <td>50000</td>
            <td>50000</td>
        </tr>
        <tr>
            <td colspan="5" style="text-align: right;"><strong>–ò—Ç–æ–≥–æ:</strong></td>
            <td>50000</td>
        </tr>
    </table>
    
    <p>–í—Å–µ–≥–æ –æ–∫–∞–∑–∞–Ω–æ —É—Å–ª—É–≥ –Ω–∞ —Å—É–º–º—É 50000 (–ø—è—Ç—å–¥–µ—Å—è—Ç —Ç—ã—Å—è—á) —Ä—É–±–ª–µ–π 00 –∫–æ–ø–µ–µ–∫, –ù–î–° –Ω–µ –æ–±–ª–∞–≥–∞–µ—Ç—Å—è.</p>
    
    <table style="width: 100%; margin-top: 50px;">
        <tr>
            <td style="width: 50%; vertical-align: top;">
                <p><b>–ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å:</b></p>
                <p>–ò–ü –ò–≤–∞–Ω–æ–≤<br>–ò–ù–ù: 123456789012<br>–û–ì–†–ù–ò–ü: 123456789012345</p>
                <p>_________________________ / –ò–≤–∞–Ω–æ–≤ –ò.–ò. /</p>
            </td>
            <td style="width: 50%; vertical-align: top;">
                <p><b>–ó–∞–∫–∞–∑—á–∏–∫:</b></p>
                <p>–ü–µ—Ç—Ä–æ–≤ –ü–µ—Ç—Ä –ü–µ—Ç—Ä–æ–≤–∏—á<br>–ü–∞—Å–ø–æ—Ä—Ç: 1234 567890</p>
                <p>_________________________ / –ü–µ—Ç—Ä–æ–≤ –ü.–ü. /</p>
            </td>
        </tr>
    </table>
</body>
</html>';

// –ö–æ–ø–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é sanitizeHtmlForPhpWord –∏–∑ –Ω–∞—à–µ–≥–æ –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–∞
function sanitizeHtmlForPhpWord($html) {
    // –®–∞–≥ 1: –£–¥–∞–ª—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã HTML
    $html = preg_replace('/<!DOCTYPE[^>]*>/i', '', $html);
    $html = preg_replace('/<\/?html[^>]*>/i', '', $html);
    $html = preg_replace('/<\/?head[^>]*>/i', '', $html);
    $html = preg_replace('/<\/?body[^>]*>/i', '', $html);
    $html = preg_replace('/<meta[^>]*>/i', '', $html);
    $html = preg_replace('/<\/?title[^>]*>/i', '', $html);
    
    // –®–∞–≥ 2: –£–¥–∞–ª—è–µ–º style –∏ script –±–ª–æ–∫–∏
    $html = preg_replace('/<style[^>]*>.*?<\/style>/is', '', $html);
    $html = preg_replace('/<script[^>]*>.*?<\/script>/is', '', $html);
    
    // –®–∞–≥ 3: –ö–†–ò–¢–ò–ß–ï–°–ö–ò –í–ê–ñ–ù–û - –ò—Å–ø—Ä–∞–≤–ª—è–µ–º —Å–∞–º–æ–∑–∞–∫—Ä—ã–≤–∞—é—â–∏–µ—Å—è —Ç–µ–≥–∏
    // PhpWord/DOMDocument —Ç—Ä–µ–±—É–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω–æ –∑–∞–∫—Ä—ã—Ç—ã–µ —Ç–µ–≥–∏
    $html = preg_replace('/<br\s*\/?>/i', '<br></br>', $html);
    $html = preg_replace('/<hr\s*\/?>/i', '<hr></hr>', $html);
    $html = preg_replace('/<img([^>]*)\s*\/?>/i', '<img$1></img>', $html);
    
    // –®–∞–≥ 4: –£–ø—Ä–æ—â–∞–µ–º –∞—Ç—Ä–∏–±—É—Ç—ã - —É–¥–∞–ª—è–µ–º CSS –∫–ª–∞—Å—Å—ã –∏ —Å—Ç–∏–ª–∏
    $html = preg_replace('/\s+class="[^"]*"/i', '', $html);
    $html = preg_replace('/\s+style="[^"]*"/i', '', $html);
    $html = preg_replace('/\s+id="[^"]*"/i', '', $html);
    $html = preg_replace('/\s+(data-[^=]*="[^"]*")/i', '', $html);
    $html = preg_replace('/\s+(role="[^"]*")/i', '', $html);
    $html = preg_replace('/\s+(aria-[^=]*="[^"]*")/i', '', $html);
    
    // –®–∞–≥ 5: –£–ø—Ä–æ—â–∞–µ–º —Ç–∞–±–ª–∏—Ü—ã –¥–ª—è –ª—É—á—à–µ–π —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
    $html = preg_replace('/<table[^>]*>/', '<table border="1">', $html);
    
    // –®–∞–≥ 6: –ó–∞–º–µ–Ω—è–µ–º div.header –Ω–∞ h2 –∏ –¥—Ä—É–≥–∏–µ div –Ω–∞ p
    $html = preg_replace('/<div[^>]*class="header"[^>]*>(.*?)<\/div>/is', '<h2>$1</h2>', $html);
    $html = preg_replace('/<div[^>]*>(.*?)<\/div>/is', '<p>$1</p>', $html);
    
    // –®–∞–≥ 7: –≠–∫—Ä–∞–Ω–∏—Ä—É–µ–º –∞–º–ø–µ—Ä—Å–∞–Ω–¥—ã
    $html = preg_replace('/&(?![a-zA-Z0-9#]{1,7};)/', '&amp;', $html);
    
    // –®–∞–≥ 8: –£–¥–∞–ª—è–µ–º –ª–∏—à–Ω–∏–µ –ø—Ä–æ–±–µ–ª—ã
    $html = preg_replace('/\s+/', ' ', $html);
    $html = trim($html);
    
    return $html;
}

echo "=== –¢–ï–°–¢: –£–ª—É—á—à–µ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è sanitizeHtmlForPhpWord ===\n";
try {
    // –ü—Ä–∏–º–µ–Ω—è–µ–º –Ω–∞—à—É —É–ª—É—á—à–µ–Ω–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é
    $cleanHtml = sanitizeHtmlForPhpWord($realHtml);
    echo "–û—á–∏—â–µ–Ω–Ω—ã–π HTML (–ø–µ—Ä–≤—ã–µ 300 —Å–∏–º–≤–æ–ª–æ–≤):\n" . substr($cleanHtml, 0, 300) . "...\n\n";
    
    // –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å PhpWord
    $phpWord = new PhpWord();
    $section = $phpWord->addSection();
    
    Html::addHtml($section, $cleanHtml);
    
    echo "‚úÖ –£–°–ü–ï–•: HTML —É—Å–ø–µ—à–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω PhpWord\n";
    echo "‚ÑπÔ∏è  –≠–ª–µ–º–µ–Ω—Ç–æ–≤ –≤ —Å–µ–∫—Ü–∏–∏: " . count($section->getElements()) . "\n";
    
    // –ü–æ–ø—Ä–æ–±—É–µ–º —Å–æ–∑–¥–∞—Ç—å DOCX (–±–µ–∑ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∏–∑-–∑–∞ –ø—Ä–æ–±–ª–µ–º—ã —Å ZipArchive)
    echo "\n=== –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–∏—è DOCX (—Ç–æ–ª—å–∫–æ –æ–±—ä–µ–∫—Ç) ===\n";
    $objWriter = IOFactory::createWriter($phpWord, 'Word2007');
    echo "‚úÖ –£–°–ü–ï–•: Writer —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ\n";
    
    // –ü–æ–ø—Ä–æ–±—É–µ–º —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å (–æ–∂–∏–¥–∞–µ–º –æ—à–∏–±–∫—É ZipArchive)
    try {
        $tempFile = tempnam(sys_get_temp_dir(), 'test_docx_');
        $objWriter->save($tempFile);
        echo "‚úÖ –ù–ï–í–ï–†–û–Ø–¢–ù–û: –§–∞–π–ª DOCX —Å–æ—Ö—Ä–∞–Ω–µ–Ω! " . $tempFile . "\n";
        echo "üìä –†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞: " . filesize($tempFile) . " –±–∞–π—Ç\n";
        unlink($tempFile);
    } catch (\Error $e) {
        if (strpos($e->getMessage(), 'ZipArchive') !== false) {
            echo "‚ùå –û–ñ–ò–î–ê–ï–ú–û: ZipArchive –Ω–µ –Ω–∞–π–¥–µ–Ω - " . $e->getMessage() . "\n";
            echo "üí° –†–µ—à–µ–Ω–∏–µ: –ù—É–∂–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ PHP ZIP\n";
        } else {
            echo "‚ùå –ù–ï–û–ñ–ò–î–ê–ù–ù–ê–Ø –û–®–ò–ë–ö–ê: " . $e->getMessage() . "\n";
        }
    }
    
} catch (Exception $e) {
    echo "‚ùå –û–®–ò–ë–ö–ê –æ–±—Ä–∞–±–æ—Ç–∫–∏ HTML: " . $e->getMessage() . "\n";
}

echo "\n–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!\n";
echo "üìã –ò–¢–û–ì–ò:\n";
echo "- HTML —É—Å–ø–µ—à–Ω–æ –æ—á–∏—â–∞–µ—Ç—Å—è –∏ –ø–∞—Ä—Å–∏—Ç—Å—è PhpWord\n";
echo "- –ü—Ä–æ–±–ª–µ–º–∞ —Ç–æ–ª—å–∫–æ —Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º DOCX –∏–∑-–∑–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏—è ZipArchive\n";
echo "- –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–ª—É—á–∏—Ç –ø–æ–Ω—è—Ç–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ\n";
